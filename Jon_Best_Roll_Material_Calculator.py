import math
import sys
import base64
from PySide2.QtWidgets import QApplication, QMainWindow, QLabel, QLineEdit, QPushButton, QVBoxLayout, QWidget, QDialog
from PySide2.QtGui import QPixmap, QImage, QIcon
from PySide2.QtCore import Qt

class ErrorDialog(QDialog):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setWindowTitle("Error")
        layout = QVBoxLayout(self)

        message_label = QLabel("Please enter valid numeric values for all fields.")
        message_label.setAlignment(Qt.AlignCenter)
        layout.addWidget(message_label)

        ok_button = QPushButton("Okay")
        ok_button.setStyleSheet("background-color: MidnightBlue; color: white; font-family: Arial; font-size: 14px; font-weight: bold; padding: 5px 10px; border-radius: 5px;")
        ok_button.clicked.connect(self.accept)
        layout.addWidget(ok_button)

def calculate_linear_length(tube_diameter_in, roll_diameter_full_in, media_thickness):
   # roll_radius_full_in = roll_diameter_full_in / 2.0
   # current_roll_radius_in = current_roll_diameter_in / 2.0

    # Calculate the length of material on the roll using the formula for the length of a rolled material
    # Length = Ï€ * (Tube Radius^2 - Current Roll Radius^2)
    length_of_material_in = math.pi * ((roll_diameter_full_in**2)/4 - (tube_diameter_in**2)/4)/media_thickness

    return length_of_material_in

if __name__ == "__main__":
    app = QApplication.instance()
    if app is None:
        app = QApplication(sys.argv)
    else:
        print("QApplication instance already exists. Exiting the current instance...")
        
        # Base64 encoded image data
    base64_logo_data = b''
    base64_bg_data = b''
    base64_icon = b'AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAABILAAASCwAAAAAAAAAAAAAAAAAAAAAAACcmxAAnJsMEIx+rFyMfqhkjH6oZIx+qGSMfqhkjH6oZIx+qGSMfqxclH7sEJR+8AAAAAAAAAAAAAAAAAC0x7QAsLuMALDDoSiYlwM4jH6nVIx+q1CMfqtQjH6rUIx+q1CMfqdUlH7nOKB/VSicf0QAoH9gAAAAAAAAAAAAtMe0ALTHtEy0x7r8qLNz/JCCu/yMfqv8jH6r/Ix+q/yMfqv8jH63/Jx/M/ygf2b8oH9gTKB/YAAAAAAAtMe0ALTHtAC0x7WwtMe38LTHs/ycmxv0jH6n/Ix+q/yMfqv8jH6n/JR+9/Sgf2P8oH9j8KB/YbCgf2AAoH9gALTHtAC0x7SMtMe3XLTHt/y0x7v8rLuL+JCGz/iMfqf8jH6r/JB+w/icf0f4oH9j/KB/Y/ygf2NcoH9gjKB/YAC0x7QItMe2LLTHt/y0x7f8tMe3/LTHu/ygpzv0jH6r/Ix+q/yYfw/0oH9j/KB/Y/ygf2P8oH9j/KB/Yiygf2AItMe5CLTHu5y0x7v8tMe7/LTHu/y0x7v8sMOj+JSO4/iQfs/4oH9T+KB/Y/ygf2P8oH9j/KB/Y/ygf2OcoH9hCKy7iwCwv5f8sL+X/LC/l/ywv5f8sL+X/LC/m/ykp0f0nIcz9KSHb/ykh2/8pIdv/KSHb/ykh2/8pIdv/KSLbwCUitcAkIbL/JCGy/yQhsv8kIbL/JCGy/yQhsv8mIcH9Kynj/Swv6/8sL+r/LC/q/ywv6v8sL+r/LC/q/ywu6sAjH6lCIx+p5yMfqf8jH6n/Ix+p/yMfqf8jH63+Jx/N/ikj3f4tMOv+LTHt/y0x7f8tMe3/LTHt/y0x7ectMe1CIx+qAiMfqosjH6r/Ix+q/yMfqv8jH6r/JR+//Sgf2P8oH9j/Kynj/S0x7f8tMe3/LTHt/y0x7f8tMe2LLTHtAiMfqgAjH6ojIx+q1yMfqv8jH6r/JB+x/icf0v4oH9j/KB/Y/ykh2/4sLur+LTHt/y0x7f8tMe3XLTHtIy0x7QAjH6oAIx+qACMfqmwjH6r8Ix+q/yYfxf0oH9n/KB/Y/ygf2P8oH9j/Kibh/S0x7f8tMe38LTHtbC0x7QAtMe0AAAAAACMfqgAjH6oTIx+pvyQftv8oH9X/KB/Y/ygf2P8oH9j/KB/Y/ygg2f8sLOj/LTHtvy0x7RMtMe0AAAAAAAAAAAAjH6oAJB+xACMfrUomH8nOKB/Z1Sgf2NQoH9jUKB/Y1Cgf2NQoH9jVKiXfzi0w7EosLuoALTHtAAAAAAAAAAAAAAAAACYfxgAmH8cEKB/XFygf2BkoH9gZKB/YGSgf2BkoH9gZKB/YGSgf2BcqJuAEKibgAAAAAAAAAAAA4AcAAOAHAADAAwAAwAMAAIABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAQAAwAMAAMADAADgBwAA4AcAAA=='
    
    # Create a QPixmap from base64-encoded icon
    icon_data = base64.b64decode(base64_icon)
    pixmap = QPixmap()
    pixmap.loadFromData(icon_data)
    
    # Decode the base64 image data
    decoded_logo_data = base64.b64decode(base64_logo_data)
    logo_label = QImage.fromData(decoded_logo_data)
    
    decoded_bg_data = base64.b64decode(base64_bg_data)
    bg_image = QImage.fromData(decoded_bg_data)
        
    window = QMainWindow()
    
    # Convert QPixmap to QIcon
    icon = QIcon(pixmap)
    window.setWindowIcon(icon)
    
    window.setWindowTitle("Roll Length Calculator")
    window.setStyleSheet("color: MidnightBlue; font-family: Arial; font-size: 14px; font-weight: bold; border-radius: 5px;")
    window.setWindowIcon(QIcon(pixmap))
    
    # Set the size of the calculator window (width, height)
    window_width = 300  # Set your desired initial width
    window_height = 583  # Set your desired initial height
    window.setGeometry(100, 100, window_width, window_height)
    
    # Set the minimum and maximum size constraints for the window
    window.setMinimumSize(300, 470)  # Set your desired minimum width and height
    window.setMaximumSize(300, 470)  # Set your desired maximum width and height
    
    # Create a QPixmap from the decoded image data
    bg_pixmap = QPixmap.fromImage(bg_image)

    bg_label = QLabel(window)
    bg_label.setPixmap(bg_pixmap)
    bg_label.setGeometry(0, 0, window_width, window_height)
    bg_label.setAlignment(Qt.AlignCenter)

    main_widget = QWidget(window)
    window.setCentralWidget(main_widget)
    
    layout = QVBoxLayout()
    layout.setAlignment(Qt.AlignCenter)  # Center-align the widgets within the layout

    # Create a QPixmap from the decoded logo image data
    logo_pixmap = QPixmap.fromImage(logo_label)

    # Create the logo label and set the pixmap
    logo_label = QLabel()
    logo_label.setStyleSheet("margin-top:10px; margin-bottom:10px;")
    logo_label.setPixmap(logo_pixmap)
    layout.addWidget(logo_label)

    tube_label = QLabel("Tube Diameter (in inches):")
    tube_label.setStyleSheet("color: MidnightBlue; font-family: Arial; font-size: 14px; font-weight: bold;")
    tube_entry = QLineEdit()
    tube_entry.setFixedWidth(250)  # Set the width of the input box to 150 pixels
    tube_entry.setStyleSheet("background-color: black; color: white; font-family: Arial; font-size: 14px; font-weight: bold; margin-bottom:10px; padding-left: 5px; height: 25px; border-radius: 5px;")
    tube_entry.setPlaceholderText("Enter tube diameter")
    layout.addWidget(tube_label)
    layout.addWidget(tube_entry)

    roll_label = QLabel("Roll Diameter (in inches):")
    roll_label.setStyleSheet("color: MidnightBlue; font-family: Arial; font-size: 14px; font-weight: bold;")
    roll_entry = QLineEdit()
    roll_entry.setFixedWidth(250)  # Set the width of the input box to 150 pixels
    roll_entry.setStyleSheet("background-color: black; color: white; font-family: Arial; font-size: 14px; font-weight: bold; margin-bottom:10px; padding-left: 5px; height: 25px; border-radius: 5px;")
    roll_entry.setPlaceholderText("Enter roll diameter")
    layout.addWidget(roll_label)
    layout.addWidget(roll_entry)

    media_label = QLabel("Media Thickness (in inches):")
    media_label.setStyleSheet("color: MidnightBlue; font-family: Arial; font-size: 14px; font-weight: bold;")
    media_entry = QLineEdit()
    media_entry.setFixedWidth(250)  # Set the width of the input box to 150 pixels
    media_entry.setStyleSheet("background-color: black; color: white; font-family: Arial; font-size: 14px; font-weight: bold; margin-bottom:10px; padding-left: 5px; height: 25px; border-radius: 5px;")
    media_entry.setPlaceholderText("Enter media thickness")
    layout.addWidget(media_label)
    layout.addWidget(media_entry)
    
    # Add a QLabel widget for the result display label
    result_label = QLabel("Current Media Length (in inches):")
    result_label.setStyleSheet("font-family: Arial; font-size: 14px; font-weight: bold;")
    layout.addWidget(result_label)
    
    # Add a QLineEdit widget to display the result
    result_display = QLineEdit()
    result_display.setFixedWidth(250)
    result_display.setStyleSheet("background-color: black; color: white; font-family: Arial; font-size: 14px; font-weight: bold; margin-bottom:10px; padding-left: 5px; height: 25px; border-radius: 5px;")
    result_display.setReadOnly(True)  # Make the input field read-only
    layout.addWidget(result_display)
    
    layout.addStretch()  # Add stretch to fill the remaining space

    # Calculate the height of the layout
    layout_height = layout.sizeHint().height()

    # Set the size of the calculator window (width, height)
    window_width = 300  # Set your desired initial width
    window_height = layout_height + 50  # Adjust the height to accommodate the layout and some extra space
    window.setGeometry(100, 100, window_width, window_height)

    calculate_button = QPushButton("Calculate")
    calculate_button.setFixedWidth(250)  # Set the width of the button to 150 pixels
    calculate_button.setStyleSheet("background-color: MidnightBlue; color: white; font-family: Arial; font-size: 14px; font-weight: bold; margin-bottom:10px; height: 25px; border-radius: 5px;")

    def calculate_button_click():
        try:
            tube_diameter_in = float(tube_entry.text())
            roll_diameter_full_in = float(roll_entry.text())
            media_thickness = float(media_entry.text())

            current_linear_length_in = calculate_linear_length(tube_diameter_in, roll_diameter_full_in, media_thickness)

            # Display the result in the input field
            result_display.setText(f"{current_linear_length_in:.2f} inches")
        except ValueError:
            error_dialog = ErrorDialog(window)
            error_dialog.exec_()

    calculate_button.clicked.connect(calculate_button_click)
    layout.addWidget(calculate_button)
    
    # Function to trigger the calculation using "Enter" key press
    def trigger_calculation():
        calculate_button_click()

    # Connect the "Enter" key press event to trigger the calculation
    tube_entry.returnPressed.connect(trigger_calculation)
    roll_entry.returnPressed.connect(trigger_calculation)
    media_entry.returnPressed.connect(trigger_calculation)    

    # Add a "Reset Fields" button
    def reset_fields():
        tube_entry.clear()
        roll_entry.clear()
        media_entry.clear()
        result_display.clear()

    reset_button = QPushButton("Reset Fields")
    reset_button.setFixedWidth(250)
    reset_button.setStyleSheet("background-color: SteelBlue; color: white; font-family: Arial; font-size: 14px; font-weight: bold; margin-bottom:10px; height: 25px; border-radius: 5px;")
    reset_button.clicked.connect(reset_fields)
    layout.addWidget(reset_button)
    
    main_widget.setLayout(layout)

    window.show()
    sys.exit(app.exec_())
